{\rtf1\ansi\ansicpg1251\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 1)\
#include <iostream>\
#include <vector>\
\
int main() \{\
    const int m = 4, n = 3; // \uc0\u1088 \u1086 \u1079 \u1084 \u1110 \u1088  \u1084 \u1072 \u1089 \u1080 \u1074 \u1091 \
    int arr[m][n] = \{\
        \{3, 8, 1\},\
        \{4, 6, 9\},\
        \{2, 5, 7\},\
        \{10, 12, 14\}\
    \};\
\
    // \uc0\u1055 \u1110 \u1076 \u1088 \u1072 \u1093 \u1091 \u1085 \u1086 \u1082  \u1087 \u1072 \u1088 \u1085 \u1080 \u1093  \u1095 \u1080 \u1089 \u1077 \u1083  \u1091  \u1082 \u1086 \u1078 \u1085 \u1086 \u1084 \u1091  \u1088 \u1103 \u1076 \u1082 \u1091 \
    for (int i = 0; i < m; i++) \{\
        int even_count = 0; // \uc0\u1083 \u1110 \u1095 \u1080 \u1083 \u1100 \u1085 \u1080 \u1082  \u1087 \u1072 \u1088 \u1085 \u1080 \u1093  \u1095 \u1080 \u1089 \u1077 \u1083 \
        for (int j = 0; j < n; j++) \{\
            if (arr[i][j] % 2 == 0) \{\
                even_count++;\
            \}\
        \}\
        std::cout << "\uc0\u1050 \u1110 \u1083 \u1100 \u1082 \u1110 \u1089 \u1090 \u1100  \u1087 \u1072 \u1088 \u1085 \u1080 \u1093  \u1095 \u1080 \u1089 \u1077 \u1083  \u1091  \u1088 \u1103 \u1076 \u1082 \u1091  " << i + 1 << ": " << even_count << std::endl;\
    \}\
\
    return 0;\
\}\
\
\
\
\
2)\
#include <iostream>\
#include <vector>\
\
int main() \{\
    const int m = 6, n = 4; // \uc0\u1088 \u1086 \u1079 \u1084 \u1110 \u1088  \u1084 \u1072 \u1089 \u1080 \u1074 \u1091 \
    int arr[m][n] = \{\
        \{3, 8, 1, 4\},\
        \{4, 6, 9, 2\},\
        \{2, 5, 7, 10\},\
        \{10, 12, 14, 3\},\
        \{1, 2, 4, 6\},\
        \{7, 8, 5, 0\}\
    \};\
\
    // \uc0\u1055 \u1110 \u1076 \u1088 \u1072 \u1093 \u1091 \u1085 \u1086 \u1082  \u1087 \u1072 \u1088 \u1085 \u1080 \u1093  \u1095 \u1080 \u1089 \u1077 \u1083  \u1091  \u1082 \u1086 \u1078 \u1085 \u1086 \u1084 \u1091  \u1089 \u1090 \u1086 \u1074 \u1087 \u1095 \u1080 \u1082 \u1091 \
    for (int j = 0; j < n; j++) \{\
        int even_count = 0; // \uc0\u1083 \u1110 \u1095 \u1080 \u1083 \u1100 \u1085 \u1080 \u1082  \u1087 \u1072 \u1088 \u1085 \u1080 \u1093  \u1095 \u1080 \u1089 \u1077 \u1083  \u1091  \u1089 \u1090 \u1086 \u1074 \u1087 \u1095 \u1080 \u1082 \u1091 \
        for (int i = 0; i < m; i++) \{\
            if (arr[i][j] % 2 == 0) \{\
                even_count++;\
            \}\
        \}\
        std::cout << "\uc0\u1050 \u1110 \u1083 \u1100 \u1082 \u1110 \u1089 \u1090 \u1100  \u1087 \u1072 \u1088 \u1085 \u1080 \u1093  \u1095 \u1080 \u1089 \u1077 \u1083  \u1091  \u1089 \u1090 \u1086 \u1074 \u1087 \u1095 \u1080 \u1082 \u1091  " << j + 1 << ": " << even_count << std::endl;\
    \}\
\
    return 0;\
\}\
\
\
\
3)\
\
#include <iostream>\
#include <vector>\
\
int main() \{\
    const int m = 5, n = 7; // \uc0\u1088 \u1086 \u1079 \u1084 \u1110 \u1088  \u1084 \u1072 \u1089 \u1080 \u1074 \u1091 \
    int arr[m][n] = \{\
        \{3, 8, 1, 4, 5, 2, 7\},\
        \{6, 2, 9, 0, 3, 1, 8\},\
        \{4, 7, 2, 5, 6, 3, 0\},\
        \{1, 6, 8, 4, 2, 7, 3\},\
        \{5, 0, 3, 9, 1, 8, 4\}\
    \};\
\
    // \uc0\u1054 \u1073 \u1095 \u1080 \u1089 \u1083 \u1077 \u1085 \u1085 \u1103  \u1089 \u1091 \u1084 \u1080  \u1077 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090 \u1110 \u1074  \u1082 \u1086 \u1078 \u1085 \u1086 \u1075 \u1086  \u1088 \u1103 \u1076 \u1082 \u1072 \
    for (int i = 0; i < m; i++) \{\
        int row_sum = 0; // \uc0\u1079 \u1084 \u1110 \u1085 \u1085 \u1072  \u1076 \u1083 \u1103  \u1089 \u1091 \u1084 \u1080  \u1077 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090 \u1110 \u1074  \u1088 \u1103 \u1076 \u1082 \u1072 \
        for (int j = 0; j < n; j++) \{\
            row_sum += arr[i][j];\
        \}\
        std::cout << "\uc0\u1057 \u1091 \u1084 \u1072  \u1077 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090 \u1110 \u1074  \u1091  \u1088 \u1103 \u1076 \u1082 \u1091  " << i + 1 << ": " << row_sum << std::endl;\
    \}\
\
    return 0;\
\}\
\
\
\
4)\
  #include <iostream>\
#include <vector>\
\
int main() \{\
    const int m = 4, n = 6; // \uc0\u1088 \u1086 \u1079 \u1084 \u1110 \u1088  \u1084 \u1072 \u1089 \u1080 \u1074 \u1091 \
    int arr[m][n] = \{\
        \{3, 8, 1, 4, 5, 2\},\
        \{6, 2, 9, 0, 3, 1\},\
        \{4, 7, 2, 5, 6, 3\},\
        \{1, 6, 8, 4, 2, 7\}\
    \};\
\
    // \uc0\u1054 \u1073 \u1095 \u1080 \u1089 \u1083 \u1077 \u1085 \u1085 \u1103  \u1089 \u1091 \u1084 \u1080  \u1077 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090 \u1110 \u1074  \u1082 \u1086 \u1078 \u1085 \u1086 \u1075 \u1086  \u1089 \u1090 \u1086 \u1074 \u1087 \u1095 \u1080 \u1082 \u1072 \
    for (int j = 0; j < n; j++) \{\
        int column_sum = 0; // \uc0\u1079 \u1084 \u1110 \u1085 \u1085 \u1072  \u1076 \u1083 \u1103  \u1089 \u1091 \u1084 \u1080  \u1077 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090 \u1110 \u1074  \u1089 \u1090 \u1086 \u1074 \u1087 \u1095 \u1080 \u1082 \u1072 \
        for (int i = 0; i < m; i++) \{\
            column_sum += arr[i][j];\
        \}\
        std::cout << "\uc0\u1057 \u1091 \u1084 \u1072  \u1077 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090 \u1110 \u1074  \u1091  \u1089 \u1090 \u1086 \u1074 \u1087 \u1095 \u1080 \u1082 \u1091  " << j + 1 << ": " << column_sum << std::endl;\
    \}\
\
    return 0;\
\}\
\
\
\
\
5)\
  #include <iostream>\
#include <vector>\
\
int main() \{\
    const int m = 3, n = 4; // \uc0\u1088 \u1086 \u1079 \u1084 \u1110 \u1088  \u1084 \u1072 \u1089 \u1080 \u1074 \u1091 \
    int arr[m][n] = \{\
        \{3, 8, 1, 4\},\
        \{6, 2, 9, 0\},\
        \{4, 7, 5, 3\}\
    \};\
\
    // \uc0\u1030 \u1085 \u1110 \u1094 \u1110 \u1072 \u1083 \u1110 \u1079 \u1072 \u1094 \u1110 \u1103  \u1079 \u1084 \u1110 \u1085 \u1085 \u1080 \u1093  \u1076 \u1083 \u1103  \u1079 \u1073 \u1077 \u1088 \u1077 \u1078 \u1077 \u1085 \u1085 \u1103  \u1084 \u1072 \u1082 \u1089 \u1080 \u1084 \u1072 \u1083 \u1100 \u1085 \u1086 \u1075 \u1086  \u1079 \u1085 \u1072 \u1095 \u1077 \u1085 \u1085 \u1103  \u1090 \u1072  \u1081 \u1086 \u1075 \u1086  \u1087 \u1086 \u1079 \u1080 \u1094 \u1110 \u1111 \
    int max_value = arr[0][0];\
    int max_row = 0;\
    int max_col = 0;\
\
    // \uc0\u1055 \u1086 \u1096 \u1091 \u1082  \u1084 \u1072 \u1082 \u1089 \u1080 \u1084 \u1072 \u1083 \u1100 \u1085 \u1086 \u1075 \u1086  \u1077 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090 \u1072  \u1090 \u1072  \u1081 \u1086 \u1075 \u1086  \u1087 \u1086 \u1079 \u1080 \u1094 \u1110 \u1111 \
    for (int i = 0; i < m; i++) \{\
        for (int j = 0; j < n; j++) \{\
            if (arr[i][j] > max_value) \{\
                max_value = arr[i][j];\
                max_row = i;\
                max_col = j;\
            \}\
        \}\
    \}\
\
    // \uc0\u1042 \u1080 \u1074 \u1077 \u1076 \u1077 \u1085 \u1085 \u1103  \u1088 \u1077 \u1079 \u1091 \u1083 \u1100 \u1090 \u1072 \u1090 \u1091 \
    std::cout << "\uc0\u1052 \u1072 \u1082 \u1089 \u1080 \u1084 \u1072 \u1083 \u1100 \u1085 \u1080 \u1081  \u1077 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090 : " << max_value << std::endl;\
    std::cout << "\uc0\u1056 \u1086 \u1079 \u1090 \u1072 \u1096 \u1091 \u1074 \u1072 \u1085 \u1085 \u1103 : \u1088 \u1103 \u1076 \u1086 \u1082  " << max_row + 1 << ", \u1089 \u1090 \u1086 \u1074 \u1087 \u1095 \u1080 \u1082  " << max_col + 1 << std::endl;\
\
    return 0;\
\}\
\
\
6)\
\
   #include <iostream>\
#include <vector>\
#include <climits>\
\
int main() \{\
    const int m = 4, n = 7; // \uc0\u1088 \u1086 \u1079 \u1084 \u1110 \u1088  \u1084 \u1072 \u1089 \u1080 \u1074 \u1091 \
    int arr[m][n] = \{\
        \{3, 8, 1, 4, 5, 2, 7\},\
        \{6, 2, 9, 0, 3, 1, 8\},\
        \{4, 7, 2, 5, 6, 3, 0\},\
        \{10, 12, 14, 3, 1, 7, 6\}\
    \};\
\
    // \uc0\u1030 \u1085 \u1110 \u1094 \u1110 \u1072 \u1083 \u1110 \u1079 \u1072 \u1094 \u1110 \u1103  \u1079 \u1084 \u1110 \u1085 \u1085 \u1080 \u1093  \u1076 \u1083 \u1103  \u1079 \u1073 \u1077 \u1088 \u1077 \u1078 \u1077 \u1085 \u1085 \u1103  \u1084 \u1110 \u1085 \u1110 \u1084 \u1072 \u1083 \u1100 \u1085 \u1086 \u1075 \u1086  \u1079 \u1085 \u1072 \u1095 \u1077 \u1085 \u1085 \u1103  \u1090 \u1072  \u1081 \u1086 \u1075 \u1086  \u1087 \u1086 \u1079 \u1080 \u1094 \u1110 \u1111 \
    int min_value = INT_MAX;\
    int min_row = 0;\
    int min_col = 0;\
\
    // \uc0\u1055 \u1086 \u1096 \u1091 \u1082  \u1084 \u1110 \u1085 \u1110 \u1084 \u1072 \u1083 \u1100 \u1085 \u1086 \u1075 \u1086  \u1077 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090 \u1072  \u1090 \u1072  \u1081 \u1086 \u1075 \u1086  \u1087 \u1086 \u1079 \u1080 \u1094 \u1110 \u1111 \
    for (int i = 0; i < m; i++) \{\
        for (int j = 0; j < n; j++) \{\
            if (arr[i][j] < min_value) \{\
                min_value = arr[i][j];\
                min_row = i;\
                min_col = j;\
            \}\
        \}\
    \}\
\
    // \uc0\u1042 \u1080 \u1074 \u1077 \u1076 \u1077 \u1085 \u1085 \u1103  \u1088 \u1077 \u1079 \u1091 \u1083 \u1100 \u1090 \u1072 \u1090 \u1091 \
    std::cout << "\uc0\u1052 \u1110 \u1085 \u1110 \u1084 \u1072 \u1083 \u1100 \u1085 \u1080 \u1081  \u1077 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090 : " << min_value << std::endl;\
    std::cout << "\uc0\u1056 \u1086 \u1079 \u1090 \u1072 \u1096 \u1091 \u1074 \u1072 \u1085 \u1085 \u1103 : \u1088 \u1103 \u1076 \u1086 \u1082  " << min_row + 1 << ", \u1089 \u1090 \u1086 \u1074 \u1087 \u1095 \u1080 \u1082  " << min_col + 1 << std::endl;\
\
    return 0;\
\}}